load("@buildifier_prebuilt//:rules.bzl", "buildifier")
load("@gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")
load("@rules_go//go:def.bzl", "TOOLS_NOGO", "go_binary", "go_library", "nogo")

# buildifier lints our bazel files
# v. meta
buildifier(
    name = "buildifier.check",
    exclude_patterns = [
        "./.git/*",
    ],
    lint_mode = "warn",
    mode = "diff",
)

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./.git/*",
    ],
)

# nogo is the static analyzer for go
# https://github.com/bazel-contrib/rules_go/blob/master/go/nogo.rst
# just using all the defaults at this moment because that seems okay.
nogo(
    name = "nogo",
    visibility = ["//visibility:public"],
    deps = TOOLS_NOGO,
)

# export our buf.yaml, go.mod and go.sum so rules
# in other packages can see them
exports_files([
    "buf.yaml",
    "go.mod",
    "go.sum",
])

# Bunch of gazelle configuration
# gazelle does a lot of the heavy lifting in regards to generating and modifying
# BUILD files in our package directories.
# e.g. whenever you make a new proto or go library, running gazelle will generate
# the necessary BUILD targets (and you BUILD file if it doesn't exist), so that we
# don't have to
#
# https://github.com/bazel-contrib/bazel-gazelle/blob/master/README.rst
# included a bunch of resolve declarations for things we are likely to use

# gazelle:prefix github.com/westford14/advent_of_code_2024
# gazelle:go_grpc_compilers @rules_go//proto:go_grpc

# gazelle:resolve proto buf/validate/validate.proto @buf_deps//buf/validate:validate_proto
# gazelle:resolve proto go buf/validate/validate.proto @build_buf_gen_go_bufbuild_protovalidate_protocolbuffers_go//buf/validate
# gazelle:resolve proto google/protobuf/timestamp.proto @com_google_protobuf//:timestamp_proto
# gazelle:resolve proto go google/protobuf/timestamp.proto @org_golang_google_protobuf//types/known/timestamppb
# gazelle:resolve proto proto google/api/annotations.proto @buf_deps//google/api:visibility_proto
# gazelle:resolve proto go google/api/annotations.proto  @org_golang_google_genproto_googleapis_api//annotations
# gazelle:resolve proto proto google/api/http.proto @buf_deps//google/api:visibility_proto
# gazelle:resolve proto go google/api/http.proto  @org_golang_google_genproto_googleapis_api//annotations
# gazelle:resolve proto proto google/api/visibility.proto @buf_deps//google/api:visibility_proto
# gazelle:resolve proto go google/api/visibility.proto  @org_golang_google_genproto_googleapis_api//visibility
# gazelle:resolve proto proto google/rpc/status.proto @googleapis//google/rpc:status_proto
# gazelle:resolve proto go google/rpc/status.proto  @org_golang_google_genproto_googleapis_rpc//status

# gazelle:exclude pkg/gen
gazelle_binary(
    name = "gazelle_binary",
    languages = DEFAULT_LANGUAGES + [
        "@gazelle//language/bazel/visibility",
    ],
    visibility = ["//visibility:public"],
)

gazelle(
    name = "gazelle",
    gazelle = ":gazelle_binary",
)

go_library(
    name = "advent_of_code_2024_lib",
    srcs = ["main.go"],
    importpath = "github.com/westford14/advent_of_code_2024",
    visibility = ["//visibility:private"],
    deps = ["//internal/cmd"],
)

go_binary(
    name = "advent_of_code_2024",
    embed = [":advent_of_code_2024_lib"],
    visibility = ["//visibility:public"],
)
