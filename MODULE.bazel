module(
    name = "advent-of-code-2024",
    repo_name = "com_github_westford14_advent_of_code_2024",
)

# We are using bzlmod because this is the _future_
# it is also much easier to handle and reason about than the old
# workspace files
# https://docs.bazel.build/versions/5.1.0/bzlmod.html

# MODULE.bazel file declares the modules dependencies and other metadata.

# Define all dependencies and their versions
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.40.0")
bazel_dep(name = "rules_proto", version = "7.0.2")
bazel_dep(name = "rules_proto_grpc_go", version = "5.0.1")
bazel_dep(name = "rules_buf", version = "0.3.0")
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a")
bazel_dep(name = "protobuf", version = "28.3", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_shell", version = "0.3.0")

bazel_dep(
    name = "buildifier_prebuilt",
    version = "7.3.1",
    dev_dependency = True,
)

bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")

# Go setup
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    name = "go_sdk",
    version = "1.23.3",
)
use_repo(go_sdk, "go_sdk")

# nogo is a tool that analyzes the source code of Go programs.
# It runs in an action after the Go compiler in the Bazel Go rules and rejects sources that contain disallowed coding patterns from the configured analyzers.
# https://github.com/bazel-contrib/rules_go/blob/master/go/nogo.rst
go_sdk.nogo(nogo = "//:nogo")

register_toolchains("@go_sdk//:all")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "build_buf_gen_go_bufbuild_protovalidate_protocolbuffers_go", "com_github_bufbuild_protovalidate_go", "com_github_grpc_ecosystem_grpc_gateway_v2", "com_github_mowshon_iterium", "com_github_spf13_cobra", "org_golang_google_genproto_googleapis_api", "org_golang_google_grpc", "org_golang_google_protobuf", "org_golang_x_tools")

# We will be using buf for linting proto files and such
buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")
buf.dependency(module = "buf.build/bufbuild/protovalidate:a3320276596649bcad929ac829d451f4")
buf.dependency(module = "buf.build/googleapis/googleapis:c0913f24652a4cfc95f77d97443a5005")
buf.dependency(module = "buf.build/grpc-ecosystem/grpc-gateway:a48fcebcf8f140dd9d09359b9bb185a4")

# Override the default version of buf
buf.toolchains(version = "v1.32.1")
use_repo(buf, "buf_deps")

# OCI is gives us rules to build and push images
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Define our base image(s)
# right now, we have very few dependencies, so we just use a distroless
# we can define more base images here if needed.
oci.pull(
    name = "go_base",
    digest = "sha256:e9d0321de8927f69ce20e39bfc061343cce395996dfc1f0db6540e5145bc63a5",
    image = "gcr.io/distroless/base-debian12",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
use_repo(oci, "go_base", "go_base_linux_amd64", "go_base_linux_arm64_v8")
oci.pull(
    name = "ci_base",
    digest = "sha256:f906812e309afbb97ecdc4bdbe577f2f315e99f3bc3b03b3df6507e92bb804ab",
    image = "docker.io/cimg/base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(oci, "ci_base", "ci_base_linux_amd64", "ci_base_linux_arm64")

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

http_file(
    name = "bazel_remote_darwin_arm64",
    executable = True,
    sha256 = "d9b15c751dde2c796fd5895a9c533bcf6ce93206b5c3a17647877650630b0d07",
    url = "https://github.com/buchgr/bazel-remote/releases/download/v2.4.4/bazel-remote-2.4.4-darwin-arm64",
)

http_file(
    name = "bazel_remote_linux_arm64",
    executable = True,
    sha256 = "ed88b72ee394bc0d971f8cecac932e0faa791978691cde843fd8421ef6a01de9",
    url = "https://github.com/buchgr/bazel-remote/releases/download/v2.4.4/bazel-remote-2.4.4-linux-arm64",
)

http_file(
    name = "bazel_remote_linux_x86_64",
    executable = True,
    sha256 = "8679a76074b1408a95d2b3ec0f5b1a6d0c20500cfc24c3a87ef08c1b60200f8c",
    url = "https://github.com/buchgr/bazel-remote/releases/download/v2.4.4/bazel-remote-2.4.4-linux-x86_64",
)
